%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.5 (Build 14F27) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 900 384
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 900 384
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: TFFONX+Outage-Regular
%!FontType1-1.0: TFFONX+Outage-Regular 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /TFFONX+Outage-Regular def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /C put
dup 34 /Y put
dup 35 /P put
dup 36 /R put
dup 37 /U put
dup 38 /S put
dup 39 /space put
dup 40 /H put
dup 41 /A put
dup 42 /K put
dup 43 /E put
dup 44 /L put
dup 45 /G put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 12 1 index div -233 2 index div 1025 3 index div 934 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 14 dict dup begin
/.notdef 0 def
/space 1 def
/E 2 def
/G 3 def
/H 4 def
/K 5 def
/L 6 def
/P 7 def
/R 8 def
/S 9 def
/U 10 def
/Y 11 def
/A 12 def
/C 13 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{12 -233 1025 934}def
/UniqueID 4440185 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B0B7175CE49F0688B3F79EA3DBC898217EC91EE332F98D08B0D78E0CE25738CF87C9377EF01313E577DBB408CEDB4241AEC664BD61DE765B2D3E40FB8998A9DF6721201ACFCBD4B041B358ED1AD3CC7D75E30879A927F3330C0D0174B2567980F317931FD046C33EB3E4A1DC1D384D5FA0571D41335BD71EBA30AC69F328BF5C359E727D7CEE92429ADFABABF92CB220F54E591268AE61A69E717FFD4E7EDC6304E8A8C3FD5C824AEB0A0A8D69A69D7ED9CEDA2B1B9CA97D90682BB4490C74BDB1409543D3C1AE30E316F9488F3EE9B753E62756E1263D330B0742D28DD0C36066AB44EAC577B97637C090F5B81491321AE9F0B4B6C3A86734E4643F51EEC15E25AB86668C42A89820179127FD976657EB4B121DCC58121658862564B0023B461C3F98A3AD612BBF809CE248F4681314C2BDE2107D23E6849D7F20E74324F23A0A46C8DFA6F1427D41D66BE0FF38741CE197115A4DB2C70759158CF227B5DCBB1F5C72BCFF887B3B69B192E8193152ED8C4C4D566474C320817925E753AB5DDA2B9DD356E5D2189BACD6E593F9698650ED129F66C96E8C6ACFDB77BB7E2E88869574B497BFFB75ED3D6DECE8C1EBE8B23407BE53784C01D5B733E6B9B886BCD906DF1418D0249B7B7B37DC070DE3D0CF0D961C9CAB1D8E3DD3C5FA600D3BC34A89689694C8631242A2CCA759E645B0495B6998655CC5D9B211A304A676828E8622076676D9EAE20EA7BA2E2FD6D6A757E13889C3AD279972CCF35AF2EF52EED7
56D8B9461B92B3A6D502AA77BCAB8408388B4C71A85190A84533F00ED84A206F54882F42B84C9A666D59776D630584073E8F203F14E53AE11C9381FC5B2992C1679767AD35D495347DAE10E3FB70E55C796B122A1C4C52827FA5441F18713A91FB38146EA3715C854D9CE9EAB4677323F55E9DF6A928587DC52181BE68E9E8B1C09D841B6812D6697C70F74C31CDCDFCACB27E318A73651B85C1F1FA59766C9AD6CA4E2022FC9394127C1DCD347089E614026A46005BBB9E9572F05470131D24083352CC68CD3E40D8807985E5F89E46435D9D72FE9FB4D1499B212C3AE19E5DB276D331089A8937804C1357B99B623E4F206B754ECA74786835DE9808CCDD0D50F5883671F4A4A8CAC379E0BBCBA25ABC7772C189C2BAEAF5839C423EFEE48D9B61CC725B14CD3FD65AD0F14C79CD97D3C3548C4D0B278D59553E3A2A4938F9FFEEE81BD09CEE258C68791DC7A5D015C7322529671752DB4BA666F61345B87013261EC24D966289D8EC5FE352953EDEB635C3E1349F9B5A36EBA68F8E45A141853C3DDB098ABB385CE5672FB47404DDB54DE389D6A26B2590E756D247A9DF93F6D935398118AAA3F0DFA215D9BD5758D50B62028286D361E3FF4721B9AFF256C37310802177E81A1AD6353BF49D1E5A239A8D11473667D8B3FB1BA198FD546E01E3D3FF83BA265DD56D51C4D6B9B9B690229E561F1EB370D9DEC07E9AFE390A9AA0684E87236F21293711B83C823D127AF8DED5F8478425270D236E77357EAB2EA57429F9B7F964FE8446C8357D90B358042ABEEC3FCFA894CB30C1093E7799B826A28E87AB4AE2B95F16B3B23C9E44F9EC2A3CC85EDCF57943DE7529DCBBD84D9835EC15633FDD3E9ADE5E99684E2D92F95E215F554A1138766CF5129F6F8A1D9E3F64862549E4F2814C40FB73B8F4439BD61CA9487C56A04C39EF63C49B9918A903ED0C88F29D11AAB7FF06A0D7666006863639AAD595B7B1E552BC8CBCD9E504AC9190504F9D7A3F1C10479CD429BC6E48BEA05D486FB6B72018CB060DC3E3627E4F8D1CD84178D1D6FB305C32A65548559E69F66DE070761E1A5EC28ABB5D42DE847531DF26FC3875C99E84F8607B8C381F60D7059C98BA54DC883AC155E579A1C12DDB3008F9EBFE574C12B35803295ED6C8689D0AF2EAD8DDC187611C27629CBE4A49C64FD3E18DF80278F07A07368B1BDAEA970CFD5BCA937226555141C115D508C867A50A29CB357C13AB35AD7A43F7AD19A0452C1A26BC2AF9C4DC165E462520958D3D2E3E45BDF1F00A669954410D012E8F41EBB3737884DD30C2BEA7D8F807019766B173E872AE6F82F09EF71F483DD17DC22C1AF49FCD2D8FB0C7C2632F453C4E6451521FA4918693FB8208E4A21C872D33BF3626BE619853299BDAD16333CA36651637A5794C738106A7B73A3C7D1410373B7F2A48E205C91A

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/TFFONX+Outage-Regular cguidfix
/F1.1/TFFONX+Outage-Regular renmfont
%RBIBeginFontSubset: FOAFEF+Phosphate-Inline
%!FontType1-1.0: FOAFEF+Phosphate-Inline 1.0000.4.0020
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
14 dict begin/FontName /FOAFEF+Phosphate-Inline def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /C put
dup 34 /H put
dup 35 /L put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -377 1 index div -274 2 index div 1506 3 index div 1045 5 -1 roll div]cvx def
/sfnts [<

00>] def
/CharStrings 5 dict dup begin
/.notdef 0 def
/C 1 def
/H 2 def
/L 3 def
/uni0017 4 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 4 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-377 -274 1506 1045}def
/UniqueID 4495594 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C959DCA2B25064CB2EE653C8C5E0D08068DD956094993D87692D1893E7B2D744336E7B00D8524B61DD758B8230E1687CC52FE57AEFC41AAF5B290F634DF646E1052B37EE70D2F1E70219BF2FBEDDE7097839CD2DA27327C2B0CE971E73EEC4A530FEB590203D1C6BE40E91C0B2A977E9C5BED2A7EB2B61898F7B4CD1F74261C5A0F5D359CBC504C6B5A622BE5392795658C107131A9F192AF9B95D3FD0FB9E3A11C654A947C8672EF0BB8909907E8C542D1E520ACE77FC29142E295FEC8BA6DCDA848793233A478CBE333C43C90D1351D8544FE2298E62458B630DD9592E1CB243D06FF82BD012BE260392E3B780F8F582EBEAAEC4496AB5E85009FBC3297D1B5E868F2E324CB33905E08083BD8BA7A145BF914D5D4BC49C8B703CDFF17D997966C177D0EC525B7AE608DCFF42E06A8443DC42324AA88913FFB57EDCFE18132411D0E7F8CE489C69B7FC680782419E78888AA3B6123E261439EC83B4F9355B367DC5745DC5B48EFA3841796814D3B83CDAD9FC9F76250CAABA803CC20D67C2A4E3AA016DCC8FC5815DB0B913B79743A988613FB302704B2563B8DBF0C8C86C13100ACC6731F572A51AB8A4D1AD4FBAB39424674F038B7842B6BE7428C029EBD67ED64FBD0C0784EDA28BE7851D7B93FD848A558D5FDADC807DF2070CB84F0419AAC690E261624FA19D6BDFC6162965EC6927A07A045C2AB7E38536F0BC3C85A7E1D3A3F0DFD699AEA6D53D31E31123E1EBF5492472DC5DDC3BF79320782E12EA582
BA931F94C9BF6266783C52CB2DF76F9D985F0A952C60777C02D2FE4B75504061107ED0859C7D0E240B0C489696CA18F57E076C9A77751A08506305FF3966AAC68717E95B1DDC99272DBE210BBF8E926825D55A53F43C62DF575ADD74AC42DE598BE17CFB177A3272DCC041494EA05F910AC52D450F25A207CC28D3C6C6DC02DAB69AC63E8AF1D441AE470816D2E4CD246209B08E2B0AACEB4CF9D4625D95747B6C185E9E95886F275B3E48480246BEAE1A9D2E0DD98E8BFE8CF5E3BEEA180F9AD39F8167BB664E8C4A2BEF034F3D7E6699387B1F2723AB5C51E1C1770919927C8CB37374E700E446FB82A2B277A9A4CDF5B6927DF294B1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/FOAFEF+Phosphate-Inline cguidfix
/F2.1/FOAFEF+Phosphate-Inline renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.84705883 0.45882353 0.011764706 sc
q
6.9152842 309.18677 m
6.9152842 309.18677 10.451636 279.7677 21.966118 276.89682 c
33.480656 274.02594 63.548004 263.81146 63.548004 263.81146 c
63.548004 263.81146 79.538635 262.54239 88.16507 275.33972 c
96.791451 288.13705 125.53814 343.48007 186.97287 290.11288 c
248.40761 236.74568 276.48877 333.02228 276.48877 333.02228 c
269.12112 352.52521 l
279.6546 383.87195 l
279.6546 383.87195 311.33755 347.43515 335.9649 342.65378 c
360.59229 337.87241 376.27084 324.45087 383.94714 322.53696 c
391.6235 320.62302 414.01791 306.88593 414.01791 306.88593 c
476.06998 288.69678 l
476.06998 288.69678 488.53802 295.10059 498.45413 291.26932 c
508.3703 287.43802 510.28421 295.11435 529.47504 290.32953 c
548.66583 285.54474 573.91742 305.0683 573.91742 305.0683 c
573.91742 305.0683 580.31097 308.90988 607.18158 296.77463 c
607.18158 296.77463 630.20026 307.34247 660.57971 309.28049 c
690.95917 311.21848 689.99188 323.68991 689.99188 323.68991 c
689.99188 323.68991 711.41913 322.42429 720.05579 318.91199 c
728.6925 315.39972 737.95691 330.7558 737.95691 330.7558 c
760.34454 327.89178 l
772.49011 338.45276 l
795.19666 336.86813 l
795.19666 336.86813 825.25024 348.39984 831.95935 358.9574 c
838.6684 369.51492 865.86139 353.2225 865.86139 353.2225 c
865.86139 353.2225 881.52618 361.54712 884.40051 367.62506 c
887.27484 373.70303 897.51343 365.71457 897.51343 365.71457 c
891.13025 345.56335 l
875.14301 341.39587 l
871.95319 328.60199 l
850.20355 334.02478 l
845.73425 321.54987 l
827.50385 324.7363 l
821.11719 310.02161 l
815.68408 304.58163 l
809.92859 303.2988 l
797.13464 306.48868 l
790.10321 300.08829 l
775.07642 294.32245 l
763.24982 285.04086 l
745.65735 290.78607 l
730.315 278.30429 l
722.95764 281.49762 l
706.65833 265.17767 l
694.83173 255.89607 l
687.80023 249.4957 l
678.20654 249.16985 l
673.09589 239.57269 l
656.78619 239.56239 l
635.0401 239.54863 l
625.1308 232.50684 l
625.1308 232.50684 592.53564 194.4304 611.73682 173.33597 c
630.93799 152.24152 628.0705 135.29048 628.0705 135.29048 c
637.67108 124.74326 l
642.79895 107.15769 l
642.17126 88.289276 l
642.17126 88.289276 637.69513 86.687469 632.89661 89.242798 c
628.09802 91.798134 619.4613 95.310432 619.4613 95.310432 c
611.45905 106.81806 l
592.58722 112.88227 l
579.48126 103.91966 l
579.48126 103.91966 572.44977 97.519279 571.17377 92.401726 c
569.89783 87.284172 567.65802 89.201538 562.21808 94.634636 c
556.77808 100.06774 548.13794 109.01658 548.13794 109.01658 c
535.02167 116.36361 l
535.33716 123.07954 l
525.10547 120.1949 l
525.10547 120.1949 520.63275 113.15655 516.15326 116.99126 c
511.67365 120.826 506.55606 122.10195 506.55606 122.10195 c
497.60037 124.33485 l
497.60037 124.33485 473.30228 114.086 463.42056 63.551857 c
439.43457 65.455467 l
425.36819 58.09124 l
417.37628 53.289242 l
400.74423 57.436077 l
389.87463 51.992653 l
371.64761 49.742542 l
361.41937 41.421337 l
340.63022 45.245789 l
330.07953 41.081734 l
324.00842 33.082947 l
312.16806 45.547558 l
294.25317 55.449955 l
276.66415 55.758614 l
276.66415 55.758614 271.22766 55.75515 265.15311 53.192924 c
259.07858 50.630699 244.36736 51.58083 244.36736 51.58083 c
244.36736 51.58083 234.77368 51.254948 233.49773 46.137375 c
232.22177 41.019802 227.43008 32.702084 227.43008 32.702084 c
222.64526 13.511245 l
222.64526 13.511245 216.89661 1.3553469 206.66151 3.9072411 c
196.42638 6.4591494 198.98517 5.8211722 194.18658 8.3765192 c
189.38805 10.931852 193.53833 22.127346 193.53833 22.127346 c
197.04718 36.200615 l
181.36177 60.495255 l
169.84384 68.802696 l
155.45154 71.032181 l
140.74373 66.545692 l
127.31533 61.740273 l
127.31533 61.740273 127.6412 52.146545 120.28041 60.776424 c
112.91964 69.406242 107.16065 73.559967 107.16065 73.559967 c
97.241112 82.827812 l
82.845421 90.493843 l
74.839798 107.438 l
45.732861 116.05411 l
27.481762 151.85979 l
21.719385 161.45004 l
26.181765 184.79802 l
10.187686 191.50363 l
13.377561 204.29753 l
10.17047 218.68636 l
18.471029 241.07738 l
4.713306 251.30217 l
3.7391274 274.64673 l
6.9152842 309.18677 l
h
6.9152842 309.18677 m
W*
0 0 900 384 rc
61.865303 591.58276 m
916.17987 378.57819 l
783.07697 -155.26848 l
-71.237617 57.736073 l
h
f
Q
q
0 0 900 384 rc
2.9108872 -0.72576571 -0.72576571 -2.9108872 72.790909 573.39948 cm
0 90.767075 m
0 90.767075 3.5161407 99.996964 7.4718013 99.996964 c
11.427481 99.996964 21.975922 100.876 21.975922 100.876 c
21.975922 100.876 27.250143 99.996964 29.008223 95.162254 c
30.766283 90.327553 35.600983 70.109703 59.774498 82.416222 c
83.948021 94.72274 85.266563 61.319332 85.266563 61.319332 c
81.310898 55.605591 l
82.189941 44.61763 l
82.189941 44.61763 95.375504 53.847519 103.72634 53.408001 c
112.0772 52.968483 118.23046 56.045113 120.86756 56.045113 c
123.50468 56.045113 131.85553 58.682224 131.85553 58.682224 c
153.39192 59.56126 l
153.39192 59.56126 156.90808 56.484631 160.42422 56.924149 c
163.94038 57.363667 163.94038 54.726555 170.53314 54.726555 c
177.12593 54.726555 183.7187 46.375706 183.7187 46.375706 c
183.7187 46.375706 185.47679 44.61763 195.14619 46.375706 c
195.14619 46.375706 201.73897 41.101482 211.40837 38.024853 c
221.07779 34.948223 219.75923 30.992558 219.75923 30.992558 c
219.75923 30.992558 226.79153 29.674002 229.86815 30.11352 c
232.94478 30.553038 234.70285 24.839298 234.70285 24.839298 c
242.17467 23.960262 l
245.2513 19.565077 l
252.72311 18.246521 l
252.72311 18.246521 261.51349 12.093261 262.83203 8.1375942 c
264.1506 4.1819263 274.25952 7.2585564 274.25952 7.2585564 c
274.25952 7.2585564 278.65469 3.3028898 279.09421 1.1052977 c
279.53372 -1.0922945 283.48941 0.66577965 283.48941 0.66577965 c
283.0499 7.6980743 l
278.21521 10.335186 l
278.21521 14.730371 l
270.74338 14.730371 l
270.30386 19.125557 l
264.1506 19.565077 l
263.27155 24.839298 l
261.953 27.03689 l
260.19495 27.915928 l
255.79973 27.915928 l
254.04167 30.553038 l
249.6465 33.629669 l
246.56985 37.585335 l
240.4166 37.145817 l
236.46094 42.42004 l
233.82381 41.980518 l
229.86815 48.573299 l
226.79153 52.528965 l
225.03345 55.166073 l
221.95682 56.045113 l
221.07779 59.56126 l
215.80356 60.879814 l
208.77127 62.63789 l
206.13416 65.714516 l
206.13416 65.714516 198.66232 80.65815 206.57367 85.932365 c
214.48502 91.206589 214.92453 96.920334 214.92453 96.920334 c
218.88019 99.557442 l
221.95682 104.83167 l
223.27538 110.98492 l
223.27538 110.98492 221.95682 111.86396 220.19875 111.42445 c
218.44067 110.98492 215.36404 110.5454 215.36404 110.5454 c
211.84789 107.46877 l
205.25511 107.02926 l
201.73897 110.98492 l
201.73897 110.98492 199.9809 113.62203 199.9809 115.38011 c
199.9809 117.13818 199.10185 116.69866 196.90427 115.38011 c
194.70667 114.06155 191.19052 111.86396 191.19052 111.86396 c
186.35583 110.5454 l
185.91631 108.34781 l
182.83968 110.10589 l
182.83968 110.10589 181.96063 112.743 180.20256 111.86396 c
178.44449 110.98492 176.6864 110.98492 176.6864 110.98492 c
173.60979 110.98492 l
173.60979 110.98492 166.57748 116.25915 167.45653 133.40036 c
159.54518 134.71892 l
155.58952 138.23508 l
153.39192 140.43266 l
147.67819 140.43266 l
144.60156 143.06978 l
138.88782 145.26736 l
136.2507 148.78352 l
129.21843 149.22302 l
126.14178 151.42062 l
124.82323 154.49727 l
119.98853 151.42062 l
113.39574 149.66254 l
107.682 150.98111 l
107.682 150.98111 105.92394 151.42062 104.16586 152.73918 c
102.40778 154.05775 97.573082 154.93677 97.573082 154.93677 c
97.573082 154.93677 94.49646 155.81581 94.49646 157.57388 c
94.49646 159.33197 93.617424 162.40858 93.617424 162.40858 c
93.617424 169.00137 l
93.617424 169.00137 92.73838 173.39655 89.222237 173.39655 c
85.706078 173.39655 86.585121 173.39655 84.827042 172.95703 c
83.068977 172.51752 83.508499 168.56184 83.508499 168.56184 c
83.508499 163.72714 l
76.476196 157.13437 l
72.081017 155.37628 l
67.2463 155.81581 l
62.85112 158.45293 l
58.895458 161.09003 l
58.895458 161.09003 59.774498 164.16667 56.697865 161.96907 c
53.621246 159.77148 51.423645 158.89244 51.423645 158.89244 c
47.467983 156.69485 l
42.193764 155.37628 l
38.238102 150.54158 l
28.129183 150.10207 l
19.338802 139.99315 l
16.701702 137.35603 l
16.262182 129.4447 l
10.548441 128.56566 l
10.548441 124.17048 l
8.3508415 119.77529 l
9.2298813 111.86396 l
3.9556606 109.66637 l
1.7580608 102.19456 l
0 90.767075 l
h
0 90.767075 m
S
/Cs2 SC
1 1 1 sc
0 i
3 0 0 -3 114 111 cm
/F1.1[ 8 0 0 -8 0 0]sf
0 8 m
(!"#$%&'\(\)!*+$',+\)-%+)[ 5.528000 5.368000 5.208000 6.016000 5.960000 5.472000 2.720000 5.976000 5.960000 5.528000 5.768000 5.528000 6.016000 2.720000 4.536000 5.528000 5.960000 5.896000 5.960000 0.000000 ] xS
3 0 0 -3 114 309 cm
/F2.1[ 64 0 0 -64 0 0]sf
0 60 m
(!"#)[ 39.296000 39.424000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
